#+TITLE: RSS feed
#+STARTUP: overview
#+PROPERTY: header-args :tangle yes

|-------+----------------------------------------------------|
| =b=   | open selected entries in your browser (browse-url) |
| =y=   | copy selected entries URL to the clipboard         |
| =r=   | mark selected entries as read                      |
| =u=   | mark selected entries as unread                    |
| =+=   | add a specific tag to selected entries             |
| =-=   | remove a specific tag from selected entries        |
| =q=   | quit elfeed                                        |
| =h=   | launch hydra                                       |
| =*/*= | star/unstar entry                                  |
|-------+----------------------------------------------------|

* General Parameters
#+BEGIN_SRC emacs-lisp
  (setq config/elfeed-org-file-location "/Users/CCCP/creamy_seas/sync_files/elfeed/elfeed.org")
  (setq config/elfeed-db "/Users/CCCP/creamy_seas/sync_files/elfeed/elfeeddb")
 #+END_SRC
* PACKAGE Elfeed
#+BEGIN_SRC emacs-lisp
  (use-package elfeed
    :ensure t
    :init (my/add-to-package-list 'elfeed)
                                          ; directory to store the rss files in
    (setq elfeed-db-directory config/elfeed-db)
                                          ; default filter to apply
    (setq-default elfeed-search-filter "+unread"))
#+END_SRC
* PACKAGE Elfeed-goodies (colouring)
#+BEGIN_SRC emacs-lisp
  (use-package elfeed-goodies
    :ensure t
    :init (my/add-to-package-list 'elfeed-goodies)
    :config
    (elfeed-goodies/setup))

  (custom-set-faces '(elfeed-search-date-face
                      ((t :foreground "#11a"
                          :weight bold)))
                    '(elfeed-search-feed-face
                      ((t :foreground "#444"
                          :weight bold)))
                    '(elfeed-search-title-face
                      ((t :foreground "#3ef"
                          :weight bold))))


  (defface elfeed-search-starred-title-face
    '((t :foreground "#f77"
         :weight extra-bold
         :underline t))
    "marks a starred Elfeed entry"
    :group 'my-face-elfeed)

  (push '(starred elfeed-search-starred-title-face) elfeed-search-face-alist)
#+END_SRC

* PACKAGE Elfeed-org
Read the rss feeds from an org file
#+BEGIN_SRC emacs-lisp
  (use-package elfeed-org
    :ensure t
    :init (my/add-to-package-list 'elfeed-org)
    (elfeed-org)
    (setq rmh-elfeed-org-files (list config/elfeed-org-file-location)))
#+END_SRC
* Functions
#+BEGIN_SRC emacs-lisp
  (defun bjm/elfeed-star ()
    "Apply starred to all selected entries."
    (interactive)
    (let* ((entries (elfeed-search-selected))
           (tag (intern "starred")))

      (cl-loop for entry in entries do (elfeed-tag entry tag))
      (mapc #'elfeed-search-update-entry entries)
      (unless (use-region-p) (forward-line))))

  (defun bjm/elfeed-unstar ()
    "Remove starred tag from all selected entries."
    (interactive)
    (let* ((entries (elfeed-search-selected))
           (tag (intern "starred")))

      (cl-loop for entry in entries do (elfeed-untag entry tag))
      (mapc #'elfeed-search-update-entry entries)
      (unless (use-region-p) (forward-line))))

  (defun bjm/elfeed-load-db-and-open ()
    "Wrapper to load the elfeed db from disk before opening"
    (interactive)
    (elfeed-db-load)
    (elfeed)
    (elfeed-search-update--force))

  (defun bjm/elfeed-save-db-and-bury ()
    "Wrapper to save the elfeed db to disk before burying buffer"
    (interactive)
    (elfeed-db-save)
    (quit-window))

  (defun bjm/elfeed-show-all ()
    (interactive)
    (bookmark-maybe-load-default-file)
    (bookmark-jump "elfeed-all"))
#+END_SRC
* PACKAGE Hydra
#+BEGIN_SRC emacs-lisp
  (require 'hydra)
  (defhydra hydra-elfeed (global-map "<f5>")
    ""
    ("p" (elfeed-search-set-filter "+prog") "programming")
    ("l" (elfeed-search-set-filter "+boomer") "luke boomer")
    ("s" (elfeed-search-set-filter "+strat") "stratechery")
    ("i" (elfeed-search-set-filter "+starred") "shiny star")
    ("*" bjm/elfeed-star "star it" :color pink)
    ("8" bjm/elfeed-unstar "unstar it" :color pink)
    ("a" (elfeed-search-set-filter "@5-year-ago") "all")
    ("u" (elfeed-search-set-filter "+unread") "unread")
    ("q" bjm/elfeed-save-db-and-bury "quit" :color blue)
    )

  (defun make-hydra-elfeed ()
    "Function that is associated with 'H' keybinding in elfeed mode"
    (interactive)
    (hydra-elfeed/body))
#+END_SRC
* DOWN Adding tags as soon as new entries are added
=M-x elfeed-apply-hooks-now= to apply this to all exisitng entries
#+BEGIN_SRC emacs-lisp
  ;; (add-hook 'elfeed-new-entry-hook
  ;;          (elfeed-make-tagger :feed-url "stratechery.com/feed/"
  ;;                              :entry-title '("Exponent Podcast:.*")
  ;;                              :add 'podcast
  ;;                              :remove 'unread))
 #+END_SRC
* Keybinding
#+BEGIN_SRC emacs-lisp
  (define-key elfeed-search-mode-map (kbd "*") (function bjm/elfeed-star))
  (define-key elfeed-search-mode-map (kbd "8") (function bjm/elfeed-unstar))
  (define-key elfeed-search-mode-map (kbd "q") (function bjm/elfeed-save-db-and-bury))
  (define-key elfeed-search-mode-map (kbd "h") (function make-hydra-elfeed))
  (define-key elfeed-search-mode-map (kbd "H") (function make-hydra-elfeed))

  (define-key my/keymap (kbd "f") (function elfeed))
 #+END_SRC
* Bugs
The problem is that the entry content only includes the tiny reddit-hosted thumbnail and Elfeed doesn't know to chase through the chain of links to get to the actual image that you care about. You could try assigning your own function to elfeed-show-refresh-function that treats reddit posts differently (and calling the default for everything else). You'd need to shr-insert an img element with the full size image as the src.
