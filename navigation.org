#+TITLE: Navigation

* Dired+
Beautiful file browsing. Dired+ is downloaded manually
| =e=       | to preview file                                 |
| =a=       | go to file or directory and close dired bufffer |
| =v=       | preview                                         |
| =o=       | open in new window                              |
| =m/u=     | mark/unmark                                     |
| =+=       | add directory                                   |
| =r=       | rename                                          |
| =R=       | move mass                                       |
| =*=       | regexp                                          |
| =C-x C-q= | rename then =C-c C-c=                           |
| =M=       | change mode                                     |
| =c=       | compress                                        |

** Activate globally
#+BEGIN_SRC emacs-lisp
(add-hook 'dired-mode-hook (lambda () (dired-omit-mode)))
(add-hook 'dired-mode-hook 'all-the-icons-dired-mode)
 #+END_SRC
** Sorting
#+BEGIN_SRC emacs-lisp
(after! dired+
  (setq dired-listing-switches "-aBhl")
  (setq dired-hide-details-mode t))
 #+END_SRC
** Omissions and ignores (Can be hidden with =C-x M-o=)
| Applied to              | Face                       |                                |
|-------------------------+----------------------------+--------------------------------|
| =dired-omit-extensions= | =diredp-ignored-file-name= | grey + red box                 |
| =diredp-omit-files=     | =diredp-omit-file-name=    | red strikeout + grey + red box |

*** =dired-omit-extensions=
#+BEGIN_SRC emacs-lisp
(after! dired+
  (add-to-list 'dired-omit-extensions "git")
  (add-to-list 'dired-omit-extensions "gitignore")
  (add-to-list 'dired-omit-extensions "coverage")

  (custom-set-faces
   '(diredp-ignored-file-name ((t (:foreground "#b0bec5" :box (:line-width 2 :color "VioletRed3" :style pressed-button)))))))
 #+END_SRC
*** =dired-omit-files=
#+BEGIN_SRC emacs-lisp
(after! dired+
  (setq dired-omit-files "^\\.?#\\|^\\.$\\|__pycache__")

  (custom-set-faces
   '(diredp-omit-file-name ((t (
                                :inherit diredp-ignore-file-name
                                :foreground "#b0bec5" :strike-through "#C29D6F156F15"))))))

 #+END_SRC
** Keybindings
#+BEGIN_SRC emacs-lisp
  (global-set-key (kbd "C-x C-d") (function diredp-dired-plus-help))

  (define-key dired-mode-map (kbd "<right>") (function dired-find-file-other-window))
 #+END_SRC
* Projectile
#+begin_src emacs-lisp
(after! counsel-projectile
  (setcar counsel-projectile-switch-project-action 14))
#+end_src

* Buffers
** Moving in subwords
#+BEGIN_SRC emacs-lisp
  (global-subword-mode 1)
#+END_SRC
** Buffer name style
#+BEGIN_SRC emacs-lisp
  (setq uniquify-buffer-name-style 'post-forward)
 #+END_SRC
* PACKAGE Avy   =M-s=
The superior search method with highlighting of the leading characters.

#+BEGIN_SRC emacs-lisp
(use-package! avy
  :config
  (global-set-key (kbd "M-s") 'avy-goto-word-or-subword-1)
  (setq avy-background t)
  (setq avy-all-windows t))
#+END_SRC
* Eyebrowse multiple windows

#+BEGIN_SRC emacs-lisp
(use-package! eyebrowse
  :config
  (eyebrowse-mode)
  (global-set-key (kbd "s-a") (function eyebrowse-switch-to-window-config-1))
  (global-set-key (kbd "s-s") (function eyebrowse-switch-to-window-config-2))
  (global-set-key (kbd "s-d") (function eyebrowse-switch-to-window-config-3))
  (global-set-key (kbd "s-f") (function eyebrowse-switch-to-window-config-4))
  (global-set-key (kbd "s-g") (function eyebrowse-switch-to-window-config-5))
  )
#+END_SRC
* Window splitting

#+BEGIN_SRC emacs-lisp
(defun split-and-follow-horizontally ()
  (interactive)
  (split-window-below)
  (balance-windows)
  (other-window 1))
(global-set-key (kbd "C-x 2") 'split-and-follow-horizontally)

(defun split-and-follow-vertically ()
  (interactive)
  (split-window-right)
  (balance-windows)
  (other-window 1))
(global-set-key (kbd "C-x 3") 'split-and-follow-vertically)

(setq split-height-threshold 80)
(setq split-width-threshold 160)
#+END_SRC

* Window switching

#+BEGIN_SRC emacs-lisp
(use-package! switch-window
  :config
  (setq switch-window-input-style 'minibuffer
        switch-window-increase 8
        switch-window-threshold 2
        switch-window-shortcut-style 'qwerty
        switch-window-multiple-frames t
        switch-window-qwerty-shortcuts
        '("a" "s" "d" "f" "g" "h" "j")
        )
  (global-set-key (kbd "s-o") 'switch-window))
#+END_SRC
