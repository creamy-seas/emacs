#+TITLE: Emailmode
#+STARTUP: overview
#+PROPERTY: header-args :tangle yes

|-----------+-------------------------------------------------|
|           | *Custom*                                        |
| =C-c c=   | Capture message at point                        |
| =C-\ u=   | Update                                          |
| =C-\ C=   | Compose                                         |
|-----------+-------------------------------------------------|
|           | *Compose*                                       |
| =C-c C-a= | Attach to an email                              |
| =C-c C-d= | Save as draft                                   |
|-----------+-------------------------------------------------|
|           | *Navigation*                                    |
| =n,p=     | view the next, previous message                 |
| =],[=     | move to the next, previous unread message       |
|-----------+-------------------------------------------------|
|           | *Searching*                                     |
| =s=       | search                                          |
| =S=       | edit last query                                 |
| =/=       | narrow the search                               |
| =b=       | search bookmark                                 |
| =B=       | edit bookmark before search                     |
| =j=       | jump to maildir                                 |
| =O=       | change sort order                               |
| =P=       | toggle threading                                |
| =Q=       | toggle full-search                              |
| =V=       | toggle skip-duplicates                          |
| =W=       | toggle include-related                          |
|-----------+-------------------------------------------------|
|           | *Marking*                                       |
| =t=       | read and trash                                  |
| =o=       | dump into "orders" folder of gmail              |
| =d=       | mark for moving to the trash folder             |
| ===       | mark for removing trash flag ('untrash')        |
| =D=       | mark for complete deletion                      |
| =m=       | mark for moving to another maildir folder       |
| =r=       | mark for refiling                               |
| =+,-=     | mark for flagging/unflagging                    |
| =?,!=     | mark message as unread, read                    |
|           |                                                 |
| =u=       | unmark message at point                         |
| =U=       | unmark *all* messages                           |
|           |                                                 |
| =%=       | mark based on a regular expression              |
|           |                                                 |
| =*=       | mark for 'something' (decide later)             |
| =#=       | resolve deferred 'something' marks              |
|           |                                                 |
| =x=       | execute actions for the marked messages         |
|-----------+-------------------------------------------------|
|           | *Actions*                                       |
| =R,F,C=   | reply/forward/compose                           |
| =E=       | edit (only allowed for draft messages)          |
| =c-a=     | Capture message - can attach it in reply        |
|-----------+-------------------------------------------------|
|           | *Message View*                                  |
| =C-+,C--= | increase / decrease the number of headers shown |
| =w=       | Toggle wrapping                                 |
| =.=       | Toggle raw                                      |
| =h=       | Toggle html                                     |
| =#=       | Toggle citation                                 |
| =<SPC>=   | Scroll downloads                                |
| =g=       | Follow link                                     |
| =k=       | Save url in kill ring                           |
| =e=       | Save attachment                                 |
| =o=       | Open attachment                                 |
| =A=       | Operate on attachment                           |
|-----------+-------------------------------------------------|


* Latest commit used to build mu/mu4e
2b49db2c28c53936e31d174a9fc6b63099387130
* To read
- [[https://kkatsuyuki.github.io/notmuch-conf/][Arch Setup]]
- [[https://medium.com/@kirang89/emacs-as-email-client-with-offlineimap-and-mu4e-on-os-x-3ba55adc78b6]]
- [[http://cachestocaches.com/2017/3/complete-guide-email-emacs-using-mu-and-][Very great read]]
- [[https://notanumber.io/2016-10-03/better-email-with-mu4e/][Another great read]]
- [[https://vxlabs.com/2014/06/06/configuring-emacs-mu4e-with-nullmailer-offlineimap-and-multiple-identities/][It keeps going]]
- [[https://ict4g.net/adolfo/notes/2014/12/27/emacs-imap.html][Using keychains]]
- [[https://www.djcbsoftware.nl/code/mu/cheatsheet.html][mu cheatsheet]]
* CONFIG External setup
| SMTP | sends messages to server               |
| POP  | Downloads from server and deletes them |
| IMAP | Syncs with server                     |

** Setup
1. Remeber to run the setup in [[https://www.djcbsoftware.nl/code/mu/mu4e/Getting-started.html#Getting-started][this tutorial]] for doing external setup
2. https://etienne.depar.is/emacs.d/mu4e.html
3. http://kitchingroup.cheme.cmu.edu/blog/2016/10/29/Sending-html-emails-from-org-mode-with-org-mime/
** MANUAL-PACKAGE Initial setup
- mu4e works tightly with mu. As a result, part of the configuration is set in mu.
- In order to setup the mail database, you need to run the following

#+BEGIN_SRC shell :tangle no
 mu init --maildir="~/db_mail" --my-address="ilya.antonov@dreams-ai.com" --my-address="ilya.antonov24@ntlworld" --my-address="antonov.ilya225@gmail.com" --my-address="ilya.antonov.2013@live.rhul.ac.uk"
 #+END_SRC

You can then run
#+BEGIN_SRC shell :tangle no
 mu info
 #+END_SRC

to get information on the install

** Correct openssl

#+BEGIN_SRC shell :tangle no
  brew switch openssl 1.0.2s
 #+END_SRC

** Offlineimap
*** Install offlineimap
#+BEGIN_SRC emacs-lisp
  (my/add-dependency "offlineimap")
 #+END_SRC

*** Set the =~/.offlineimaprc=
- Example for 4 accounts
- See [[*Certificates][Certificates]] and [[*SSL certificate][SSL certificate]]

#+BEGIN_SRC text
  #  ____  _____  _   _  _____  ____      _     _
  # / ___|| ____|| \ | || ____||  _ \    / \   | |
  #| |  _ |  _|  |  \| ||  _|  | |_) |  / _ \  | |
  #| |_| || |___ | |\  || |___ |  _ <  / ___ \ | |___
  # \____||_____||_| \_||_____||_| \_\/_/   \_\|_____|
  #

  [general]
  accounts = ilya_DREAMSAI, ilya_NTLWORLD, ilya_OUTLOOK, ilya_GMAIL

  # user interface for terminal
  ui = TTYUI

  pythonfile = ~/.emacs.d/my-scripts/email/read_password.py

  # when to stop trying to establish a connection
  socktimeout = 60

  postsynchook = mu index --maildir ~/mail
  autorefresh = 5
  quick = 10

  # ____   ____   _____     _     __  __  ____            _     ___
  #|  _ \ |  _ \ | ____|   / \   |  \/  |/ ___|          / \   |_ _|
  #| | | || |_) ||  _|    / _ \  | |\/| |\___ \  _____  / _ \   | |
  #| |_| ||  _ < | |___  / ___ \ | |  | | ___) ||_____|/ ___ \  | |
  #|____/ |_| \_\|_____|/_/   \_\|_|  |_||____/       /_/   \_\|___|
  #
  #

  [Account ilya_DREAMSAI]
  localrepository = ilya_DREAMSAI-local
  remoterepository = ilya_DREAMSAI-remote

  [Repository ilya_DREAMSAI-local]
  type  = GmailMaildir
  localfolders = ~/db_mail/ilya_DREAMSAI

  [Repository ilya_DREAMSAI-remote]
  type = Gmail
  remotehost = imap.gmail.com
  remoteuser = ilya.antonov@dreams-ai.com
  remotepasseval = get_password_emacs("ilya.antonov@dreams-ai.com")
  realdelete = yes

  sslcacertfile = /usr/local/etc/openssl/cert.pem
  auth_mechanisms = LOGIN

  # _   _  _____  _  __        __ ___   ____   _      ____
  #| \ | ||_   _|| | \ \      / // _ \ |  _ \ | |    |  _ \
  #|  \| |  | |  | |  \ \ /\ / /| | | || |_) || |    | | | |
  #| |\  |  | |  | |___\ V  V / | |_| ||  _ < | |___ | |_| |
  #|_| \_|  |_|  |_____|\_/\_/   \___/ |_| \_\|_____||____/

  [Account ilya_NTLWORLD]
  localrepository = ilya_NTLWORLD-local
  remoterepository = ilya_NTLWORLD-remote

  [Repository ilya_NTLWORLD-local]
  type = Maildir
  localfolders = ~/db_mail/ilya_NTLWORLD

  [Repository ilya_NTLWORLD-remote]
  type = IMAP
  remoteport = 993
  remotehost = imap.virginmedia.com
  remoteuser = ilya.antonov24@ntlworld.com
  remotepasseval = get_password_emacs("ilya.antonov24@ntlworld.com")
  realdelete = no

  ssl = yes
  cert_fingerprint = 🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋

  folderfilter = lambda foldername: foldername  in ['INBOX', 'Drafts', 'Archive', 'Sent', 'Trash']

  #  ____  __  __     _     ___  _
  # / ___||  \/  |   / \   |_ _|| |
  #| |  _ | |\/| |  / _ \   | | | |
  #| |_| || |  | | / ___ \  | | | |___
  # \____||_|  |_|/_/   \_\|___||_____|

  [Account ilya_GMAIL]
  localrepository = ilya_GMAIL-local
  remoterepository = ilya_GMAIL-remote

  [Repository ilya_GMAIL-local]
  type  = GmailMaildir
  localfolders = ~/db_mail/ilya_GMAIL

  [Repository ilya_GMAIL-remote]
  type = Gmail
  remotehost = imap.gmail.com
  remoteuser = antonov.ilya225@gmail.com
  # remotepasseval = get_pswd("~/db_mail/.pswd_gmail.gpg")
  remotepasseval = get_password_emacs("antonov.ilya225@gmail.com")
  realdelete = yes

  sslcacertfile = /usr/local/etc/openssl/cert.pem
  auth_mechanisms = LOGIN

  #  ___   _   _  _____  _      ___    ___   _  __
  # / _ \ | | | ||_   _|| |    / _ \  / _ \ | |/ /
  #| | | || | | |  | |  | |   | | | || | | || ' /
  #| |_| || |_| |  | |  | |___| |_| || |_| || . \
  # \___/  \___/   |_|  |_____|\___/  \___/ |_|\_\


  [Account ilya_OUTLOOK]
  localrepository = ilya_OUTLOOK-local
  remoterepository = ilya_OUTLOOK-remote

  [Repository ilya_OUTLOOK-local]
  type = Maildir
  localfolders = ~/db_mail/ilya_OUTLOOK

  [Repository ilya_OUTLOOK-remote]
  type = IMAP
  remotehost = outlook.office365.com
  remoteuser = zyva263@live.rhul.ac.uk
  remotepasseval = get_password_emacs("zyva263@live.rhul.ac.uk")
  realdelete = no

  sslcacertfile = /usr/local/etc/openssl/cert.pem
  cert_fingerprint = 🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋

  folderfilter = lambda folder: folder in ['INBOX', 'Drafts', 'Archive', 'Sent Items', 'Deleted Items']

#+END_SRC
If offlineimap is giving an error, it is probably picking up python3.7. Delete all python3.7 email-related libraries:

1. Find the site libraries
#+BEGIN_SRC shell :tangle no
  python3 -m site
 #+END_SRC

2. [@2] Remove all =imap= packages
** Certificates
For [[*Sending mail][Sending mail]] you may need to get certificates and update them in =msmtprc=
#+BEGIN_SRC shell :tangle no
  msmtp --host=smtp.office365.com --port=587 --serverinfo --tls --tls-certcheck=off
 #+END_SRC
- Copy the SHA256 into tls_fingerprint of the =.offlineimaprc= file
** SSL certificate
This ensures that the connection is secure. This fingerprint is required for ntlworld
[[https://www.offlineimap.org/doc/FAQ.html#how-do-i-generate-an-sslcacertfile-file]]
https://www.offlineimap.org/doc/FAQ.html#does-offlineimap-verify-ssl-certificates

- first part gets the certificate
- second part gets information from certificate - the fingerprint

#+BEGIN_SRC sh :tangle no
  SSL_CERT_DIR="" openssl s_client -connect imap.SERVERTHATYOUCHOOSE.com:993 < /dev/null 2>/dev/null | openssl x509 -fingerprint -noout -text -in /dev/stdin
#+END_SRC
** What to install
| =offlineimap= | for the emailserver               |
| =w3m=         | text based webrowser to show html |
| =mu=          | indexer and searcher              |
** Google authentication
- With google, you need to allow unknow applications to have access to the account
- go to =https://myaccount.google.com/lesssecureapps=
- allow all applications
- https://myaccount.google.com/u/4/security

** Google Mailboxes
Create a new label in Google Mail. Next time it will sync to computer
** Outgoing Mail Server
| Account Type    | SMTP                                |
| Username        | Your email address is your username |
| Server hostname | smtp.virginmedia.com                |
| Server port     | 465                                 |
| Authentication  | Password                            |
| SSL/TLS         | Yes                                 |
** Incoming Mail Server
| Account Type    | IMAP                                |
| Username        | Your email address is your username |
| Server hostname | imap.virginmedia.com                |
| Server port     | 993                                 |
| Authentication  | Password                            |
| SSL/TLS         | Yes                                 |
* CONFIG Personal Configuration
#+BEGIN_SRC emacs-lisp
  (defvar my/mu4e-load-path "/usr/local/share/emacs/site-lisp/mu4e" "location of the emacs mu4e package")
  (defvar my/mu4e-save-dir "~/Dropbox/mail" "Location of where to save the mail attachement")
  ;; (defvar sendmail-program "/usr/local/bin/msmtp" "The SMTP binary")
 #+END_SRC
* MANUAL-PACKAGE Init
#+BEGIN_SRC emacs-lisp
  ;; Add to path and load mu4e
  (add-to-list 'load-path
               (expand-file-name my/mu4e-load-path))
  (require 'mu4e)
  (my/add-to-package-list 'mu4e)


  (setq mu4e-get-mail-command "offlineimap")

                                          ; directory for saving attachments
  (setq mu4e-attachment-dir (expand-file-name my/mu4e-save-dir))
                                          ; email addresses of user
  (setq mu4e-update-interval 500)
 #+END_SRC
* CONFIG Account setup
Remember to run [[*Initial setup][Initial setup]]
** =ilya.antonov@dreams-ai.com=
#+BEGIN_SRC emacs-lisp
  (setq my/mu4e/context-dreamsai
        (make-mu4e-context
         :name "dreams-ai"
         :enter-func (lambda () (message "Entering Dreams ☁"))
         :leave-func (lambda () (message "🦑 Plummeting out"))
         :match-func (lambda (msg)
                       (when msg
                         (mu4e-message-contact-field-matches
                          msg (list :to :from :cc) "ilya.antonov@dreams-ai.com")))
         :vars '((user-mail-address . "ilya.antonov@dreams-ai.com")
                 (user-full-name . "Ilya Antonov (Dreams-AI)")
                 ;; (mu4e-sent-messages-behavior 'delete)
                 (mu4e-sent-folder . "/ilya_DREAMSAI/[Gmail].Sent Mail")
                 (mu4e-drafts-folder . "/ilya_DREAMSAI/[Gmail].Drafts")
                 (mu4e-trash-folder . "/ilya_DREAMSAI/[Gmail].Bin")
                 (mu4e-refile-folder . "/ilya_DREAMSAI/[Gmail].Starred")
                 (mu4e-compose-signature . (concat
                                            "\n\n"
                                            "Physics Handyman\n\n"
                                            "+825 56856958\n\n"
                                            "☁ DREAMSAI"))
                 (mu4e-compose-format-flowed . t))))
 #+END_SRC
** =ilya.antonov24@ntlworld=
#+BEGIN_SRC emacs-lisp
  (setq my/mu4e/context-ntlworld
        (make-mu4e-context
         :name "ntlworld"
         :enter-func (lambda () (mu4e-message "Entering NTLWORLD"))
         :leave-func (lambda () (mu4e-message "Leaving NTLWORLD"))
         :match-func (lambda (msg)
                       (when msg
                         (mu4e-message-contact-field-matches
                          msg (list :to :from :cc) "ilya.antonov24@ntlworld.com")))
         :vars '((user-mail-address . "ilya.antonov24@ntlworld.com")
                 (user-full-name . "Ilya Antonov (NTLWORLD)")
                 ;; (mu4e-sent-messages-behavior 'delete)
                 (mu4e-sent-folder . "/ilya_NTLWORLD/Sent")
                 (mu4e-drafts-folder . "/ilya_NTLWORLD/Drafts")
                 (mu4e-trash-folder . "/ilya_NTLWORLD/Trash")
                 (mu4e-refile-folder . "/ilya_NTLWORLD/Archive")
                 (mu4e-compose-signature . (concat
                                            "Ilya Antonov,\n"
                                            "⦿ NTLWORLD\n"))
                 (mu4e-compose-format-flowed . nil))))
 #+END_SRC
** =antonov.ilya225@gmail.com=
#+BEGIN_SRC emacs-lisp
  (setq my/mu4e/context-gmail
        (make-mu4e-context
         :name "gmail"
         :enter-func (lambda () (mu4e-message "Entering GMAIL"))
         :leave-func (lambda () (mu4e-message "Leaving GMAIL"))
         :match-func (lambda (msg)
                       (when msg
                         (mu4e-message-contact-field-matches
                          msg (list :to :from :cc) "antonov.ilya225@gmail.com")))
         :vars '((user-mail-address . "antonov.ilya225@gmail.com")
                 (user-full-name . "Ilya Antonov (GMAIL)")
                 ;; (mu4e-sent-messages-behavior 'delete)
                 (mu4e-sent-folder . "/ilya_GMAIL/[Gmail].Sent Mail")
                 (mu4e-drafts-folder . "/ilya_GMAIL/[Gmail].Drafts")
                 (mu4e-trash-folder . "/ilya_GMAIL/[Gmail].Bin")
                 (mu4e-refile-folder . "/ilya_GMAIL/[Gmail].Starred")
                 (mu4e-sent-messages-behavior 'delete)
                 (mu4e-compose-signature . (concat
                                            "Ilya Antonov,\n"
                                            "⦿ GMAIL\n"))
                 (mu4e-compose-format-flowed . nil))))
#+END_SRC
** =ilya.antonov.2013@live.rhul.ac.uk=
#+BEGIN_SRC emacs-lisp
  (setq my/mu4e/context-outlook
        (make-mu4e-context
         :name "outlook"
         :enter-func (lambda () (mu4e-message "Entering OUTLOOK"))
         :leave-func (lambda () (mu4e-message "Leaving OUTLOOK"))
         :match-func (lambda (msg)
                       (when msg
                         (mu4e-message-contact-field-matches
                          msg '(list :from :to :cc :bcc) "ilya.antonov.2013@live.rhul.ac.uk")))
         :vars '((user-mail-address . "ilya.antonov.2013@live.rhul.ac.uk")
                 (user-full-name . "Ilya Antonov (OUTLOOK)")
                 (mu4e-sent-folder . "/ilya_OUTLOOK/Sent Items")
                 (mu4e-drafts-folder . "/ilya_OUTLOOK/Drafts")
                 (mu4e-trash-folder . "/ilya_OUTLOOK/Deleted Items")
                 (mu4e-refile-folder . "/ilya_OUTLOOK/Archive")
                 (mu4e-compose-signature . (concat
                                            "\nPhD Student\n\n"
                                            "*Royal Holloway University of London*"))
                 (mu4e-compose-format-flowed . nil))))
#+END_SRC
** Load the accounts
#+BEGIN_SRC emacs-lisp
                                          ; always ask for context when sending mail
  (setq mu4e-context-policy 'pick-first)
  (setq mu4e-compose-context-policy 'always-ask)

  (setq mu4e-contexts
        (list
         my/mu4e/context-dreamsai
         my/mu4e/context-ntlworld
         my/mu4e/context-gmail
         my/mu4e/context-outlook))
 #+END_SRC
* CONFIG Main menu
** CONFIG Jump to inboxes
#+BEGIN_SRC emacs-lisp
  (setq mu4e-maildir-shortcuts
        '(("/ilya_DREAMSAI/INBOX" . ?d)
          ("/ilya_GMAIL/INBOX" . ?g)
          ("/ilya_NTLWORLD/INBOX" . ?n)
          ("/ilya_OUTLOOK/INBOX" . ?l)))
 #+END_SRC
** CONFIG Bookmarks
Define queries that will be sent to =mu find= command. To see the possible queries run
#+BEGIN_SRC shell :tangle no
  man mu-find
  man mu-query
 #+END_SRC
*** Paypal (=p=)
#+BEGIN_SRC emacs-lisp
  (add-to-list 'mu4e-bookmarks
               ;; add bookmark for recent messages on the Mu mailing list.
               '( :name "Paypal example"
                        :key  ?p
                        :query "subject:/Paypal/ AND date:20d..now"))
 #+END_SRC
*** ALl inboxes (=i=)
#+BEGIN_SRC emacs-lisp
  (add-to-list 'mu4e-bookmarks
               '(:name "All Inboxes"
                       :key ?i
                       :query "maildir:/ilya_GMAIL/INBOX OR maildir:/ilya_NTLWORLD/INBOX OR maildir:/ilya_OUTLOOK/INBOX OR maildir:/ilya_DREAMSAI/INBOX"
                       ))
 #+END_SRC
*** All archives (=a=)
#+BEGIN_SRC emacs-lisp
  (add-to-list 'mu4e-bookmarks
               '(:name "All Archives"
                       :query "maildir:/ilya_GMAIL/[Gmail].Starred OR maildir:/ilya_NTLWORLD/Archive OR maildir:/ilya_OUTLOOK/Archive OR maildir:/ilya_DREAMSAI/[Gmail].Starred"
                       :key ?a))
 #+END_SRC
* CONFIG Header view
Header view is the one that displays all the emails
** Table settings
#+BEGIN_SRC emacs-lisp
  (setq mu4e-headers-fields
        '((:human-date . 10)
          (:flags . 6)
          (:mailing-list . 10)
          (:from . 22)
          (:size . 8)
          (:subject . nil)))

  (setq mu4e-split-view 'horizontal)
                                          ; allow fancy chars in the first column
  (setq mu4e-use-fancy-chars nil)
 #+END_SRC
** CONFIG Customized marking actions
*** Read and delete
#+BEGIN_SRC emacs-lisp
  (add-to-list 'mu4e-marks
               '(read-and-trash
                 :char       "D . ☠"
                 :prompt     "wRead and Trash?"
                 :show-target (lambda (target) "Read and Trash")
                 :action      (lambda (docid msg target)
                                          ;remove [u]nread and [N]ew → Mark as [S]een and [T]rash
                                (mu4e~proc-move docid nil "+S+T-u-N"))))

  (mu4e~headers-defun-mark-for read-and-trash)
  (define-key mu4e-headers-mode-map (kbd "d") 'mu4e-headers-mark-for-read-and-trash)
 #+END_SRC
*** Dump order
#+BEGIN_SRC emacs-lisp
  (add-to-list 'mu4e-marks
               '(dump-order
                 :char       ("o" . "🐋")
                 :prompt     "wPlace into order?"
                 :show-target (lambda (target) "Order")
                 :action      (lambda (docid msg target)
                                          ;remove [u]nread and [N]ew → Mark as [S]een. move to the orders directory
                                (mu4e~proc-move docid "/ilya_GMAIL/Orders" "+S-u-N"))))

  (mu4e~headers-defun-mark-for dump-order)
  (define-key mu4e-headers-mode-map (kbd "o") 'mu4e-headers-mark-for-dump-order)
 #+END_SRC
*** Expenses
#+BEGIN_SRC emacs-lisp
  (add-to-list 'mu4e-marks
               '(expenses-dreamsai
                 :char       ("e" . "💰")
                 :prompt     "wMark as expense"
                 :show-target (lambda (target) "Expenses ☁")
                 :action      (lambda (docid msg target)
                                          ;remove [u]nread and [N]ew → Mark as [S]een. move to the orders directory
                                (mu4e~proc-move docid "/ilya_DREAMSAI/Expenses" "+S-u-N"))))

  (mu4e~headers-defun-mark-for expenses-dreamsai)
  (define-key mu4e-headers-mode-map (kbd "e") 'mu4e-headers-mark-for-expenses-dreamsai)
 #+END_SRC
* Message view
** Images
#+BEGIN_SRC emacs-lisp
  (setq mu4e-view-show-images t)
                                          ; hook imagemagick if it was installed with emacs
  (when (fboundp 'imagemagick-register-types)
    (imagemagick-register-types))
 #+END_SRC
** View in browser
#+BEGIN_SRC emacs-lisp
  (add-to-list 'mu4e-view-actions '("web-view" . mu4e-action-view-in-browser) t)
 #+END_SRC
* Compose
** MANUAL-PACKAGE Editing with org-mu4e
It is installed with mu4e
#+BEGIN_SRC emacs-lisp
  (require 'org-mu4e)
  (add-hook 'mu4e-compose-mode-hook 'org-mu4e-compose-org-mode)
 #+END_SRC
** Format citation when replying
#+BEGIN_SRC emacs-lisp
  (setq message-citation-line-format "%N @ %Y-%m-%d %H:%M %Z:\n")
  (setq message-citation-line-function 'message-insert-formatted-citation-line)
 #+END_SRC
** HTML the email being sent
#+BEGIN_SRC emacs-lisp
  (use-package org-mime
    :ensure t)

  (defun my/mu4e-htmlize-and-send ()
    "When in an org-mu4e-compose-org-mode message, htmlize and send it."
    (interactive)
    (when (member 'org~mu4e-mime-switch-headers-or-body post-command-hook)
      (org-mime-htmlize)
      (message-send-and-exit)))

  (add-hook 'org-ctrl-c-ctrl-c-hook 'my/mu4e-htmlize-and-send t)
 #+END_SRC
** Sending mail using send-mail binary
Alternative is to use a server =(setq message-send-mail-function 'smtpmail-send-it)=
=
#+BEGIN_SRC emacs-lisp
  (setq message-send-mail-function (function message-send-mail-with-sendmail))
                                          ; Use the correct account context when sending mail based on the from header.
  (setq message-sendmail-envelope-from 'header)
 #+END_SRC

* PACKAGE Alert
#+BEGIN_SRC emacs-lisp
  (use-package mu4e-alert
    :ensure t
    :after mu4e
    :init (my/add-to-package-list 'mu4e-alert)
    (setq mu4e-alert-interesting-mail-query
          (concat
           "flag:unread maildir:/ilya_NTLWORLD/INBOX "
           "OR "
           "flag:unread maildir:/ilya_GMAIL/INBOX "
           "OR "
           "flag:unread maildir:/ilya_DREAMSAI/INBOX "
           " OR "
           "flag:unread maildir:/ilya_OUTLOOK/INBOX"
           ))
    (mu4e-alert-enable-mode-line-display))

                                          ; alrt to refresh every 60 seconds
  (defun my/mu4e-alert-mode-line ()
    (interactive)
    (mu4e~proc-kill)
    (mu4e-alert-enable-mode-line-display))
  (run-with-timer 0 60 'my/mu4e-alert-mode-line)
 #+END_SRC
* Custom functions
** =my/mu4e-compose-org-mail= (Composing from anywhere)
#+BEGIN_SRC emacs-lisp
  ;; (defun my/mu4e-compose-org-mail ()
  ;;   (interactive)
  ;;   (mu4e-compose-new)
  ;;   (org-mu4e-compose-org-mode))
 #+END_SRC
** Attach with dired =C=c RET C-a=
#+BEGIN_SRC emacs-lisp
  (require 'gnus-dired)
  ;; make the `gnus-dired-mail-buffers' function also work on
  ;; message-mode derived modes, such as mu4e-compose-mode
  (defun gnus-dired-mail-buffers ()
    "Return a list of active message buffers."
    (let (buffers)
      (save-current-buffer
        (dolist (buffer (buffer-list t))
          (set-buffer buffer)
          (when (and (derived-mode-p 'message-mode)
                     (null message-sent-message-via))
            (push (buffer-name buffer) buffers))))
      (nreverse buffers)))

  (setq gnus-dired-mail-mode 'mu4e-user-agent)
  (add-hook 'dired-mode-hook 'turn-on-gnus-dired-mode)
 #+END_SRC

** Start in new frame
#+BEGIN_SRC emacs-lisp
  (defun my/mu4e-in-new-frame ()
    "Start mu4e in new frame"
    (interactive)
    (select-frame (make-frame))
    (mu4e))
 #+END_SRC

* Capturing messages
#+BEGIN_SRC emacs-lisp
  (define-key mu4e-headers-mode-map (kbd "C-c c") 'mu4e-org-store-and-capture)
  (define-key mu4e-view-mode-map    (kbd "C-c c") 'mu4e-org-store-and-capture)
 #+END_SRC
* Syncing mail
** =my/update-mu4e=
 #+BEGIN_SRC emacs-lisp
   (defun my/mu4e/update ()
     (interactive)
     (let ((last-venv pyvenv-virtual-env-name))

       ;; (message (concat ">>>> Set my/python/last-venv to " last-venv))
       ;; (pyvenv-workon "imap")
       (pyvenv-deactivate)
       ;; (message ">>>> deactivated")

       (exec-path-from-shell-initialize)

       ;; (message ">>>> decrypting dummy file")
       (epa-decrypt-file
        (my/config-file-path-evaluate
         "my-files/gpg/load_password_dummy_file.gpg") "/dev/null")

       ;; (message ">>>> updating")
       (mu4e-update-mail-and-index t)

       (message (concat " (((cringe incoming))) " last-venv))
       (pyvenv-workon last-venv)
       ))
 #+END_SRC
* Sending mail
#+BEGIN_SRC emacs-lisp
  (my/add-dependency "gnupg")
 #+END_SRC
** Citation when replying
#+BEGIN_SRC emacs-lisp
  (setq message-citation-line-format "%N @ %Y-%m-%d %H:%M %Z:\n")
  (setq message-citation-line-function 'message-insert-formatted-citation-line)
 #+END_SRC
** How to send mail
#+BEGIN_SRC emacs-lisp
  (setq message-send-mail-function (function message-send-mail-with-sendmail))
                                          ; Use the correct account context when sending mail based on the from header.
  (setq message-sendmail-envelope-from 'header)
 #+END_SRC
* Keybindings
#+BEGIN_SRC emacs-lisp
  (define-key my/keymap (kbd "m") (function mu4e))
  (define-key my/keymap (kbd "M") (function my/mu4e-in-new-frame))
  (define-key my/keymap (kbd "C") (function mu4e-compose-new))
  (define-key my/keymap (kbd "u") (function my/mu4e/update))
  (define-key mu4e-main-mode-map (kbd "U") (function my/mu4e/update))
 #+END_SRC
