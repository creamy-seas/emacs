#+TITLE: Emailmode
#+STARTUP: overview

|---------------+--------------------------------------------------------------+-------------------------------|
|               | *Custom*                                                     |                               |
| =C-c c=       | Capture message at point                                     |                               |
| =C-\ u=       | Update                                                       |                               |
| =C-\ C=       | Compose                                                      |                               |
|---------------+--------------------------------------------------------------+-------------------------------|
|               | *Compose*                                                    |                               |
| =C-c RET C-a= | In direct buffer, attach to an email (select first)          |                               |
| =C-c C-d=     | Save as draft                                                |                               |
|---------------+--------------------------------------------------------------+-------------------------------|
|               | *Navigation*                                                 |                               |
| =n,p=         | view the next, previous message                              |                               |
| =],[=         | move to the next, previous unread message                    |                               |
|---------------+--------------------------------------------------------------+-------------------------------|
|               | *Searching*                                                  |                               |
| =s=           | search                                                       |                               |
| =S=           | edit last query                                              |                               |
| =/=           | narrow the search (once already in a maildir for example)    |                               |
| =b=           | search bookmark                                              |                               |
| =B=           | edit bookmark before search                                  |                               |
| =j=           | jump to maildir                                              |                               |
| =O=           | change sort order                                            |                               |
| =P=           | toggle threading                                             |                               |
| =Q=           | toggle full-search                                           |                               |
| =V=           | toggle skip-duplicates                                       |                               |
| =W=           | toggle include-related                                       |                               |
|---------------+--------------------------------------------------------------+-------------------------------|
|               | *Marking*                                                    |                               |
| =d=           | mark for TRASH                                               |                               |
| =D=           | mark for COMPLETE deletion - serious stuff                   |                               |
| =r=           | mark for refiling (archive) - may be important in the future |                               |
| =+,-=         | mark for flagging/unflagging                                 | Does not work for VIRGIN MAIL |
| =?,!=         | mark message as unread, read                                 |                               |
|               | *Custom/Rare*                                                |                               |
| =o=           | dump into "orders" folder of gmail                           |                               |
|               |                                                              |                               |
| =u=           | unmark message at point                                      |                               |
| =U=           | unmark *all* messages                                        |                               |
|               |                                                              |                               |
| =%=           | mark based on a regular expression                           |                               |
|               |                                                              |                               |
| =*=           | mark for 'something' (decide later)                          |                               |
| =#=           | resolve deferred 'something' marks                           |                               |
|               |                                                              |                               |
| =x=           | execute actions for the marked messages                      |                               |
|---------------+--------------------------------------------------------------+-------------------------------|
|               | *Actions*                                                    |                               |
| =R,F,C=       | reply/forward/compose                                        |                               |
| =E=           | edit (only allowed for draft messages)                       |                               |
| =C-c c=       | Capture message - can attach it in reply                     |                               |
|---------------+--------------------------------------------------------------+-------------------------------|
|               | *Message View*                                               |                               |
| =C-+,C--=     | increase / decrease the number of headers shown              |                               |
| =w=           | Toggle wrapping                                              |                               |
| =.=           | Toggle raw                                                   |                               |
| =h=           | Toggle html                                                  |                               |
| =#=           | Toggle citation                                              |                               |
| =<SPC>=       | Scroll downloads                                             |                               |
| =g=           | Follow link                                                  |                               |
| =k=           | Save url in kill ring                                        |                               |
| =e=           | Save attachment                                              |                               |
| =o=           | Open attachment                                              |                               |
| =A=           | Operate on attachment                                        |                               |
|---------------+--------------------------------------------------------------+-------------------------------|

After a long break, run offlineimap to update config!

#+begin_src shell
offlineimap
#+end_src

* FAQ
- If user-mail-address is not part of mu's addresses; add it with mu init --my-address=
- After being careful that no instance of mu is running (in particular, quit mu4e if launched), you may want to remove `/home/zw963/.cache/mu/xapian/flintlock'
- To kill gpg agent and dump passwords

#+begin_src shell
gpgconf --kill gpg-agent
#+end_src

- *SMTP*: sends messages to server
- *POP*: Downloads from server and deletes them
- *IMAP*: Syncs with server

* Articles
- [[https://kkatsuyuki.github.io/notmuch-conf/][Arch Setup]]
- [[https://medium.com/@kirang89/emacs-as-email-client-with-offlineimap-and-mu4e-on-os-x-3ba55adc78b6]]
- [[http://cachestocaches.com/2017/3/complete-guide-email-emacs-using-mu-and-][Very great read]]
- [[https://notanumber.io/2016-10-03/better-email-with-mu4e/][Another great read]]
- [[https://vxlabs.com/2014/06/06/configuring-emacs-mu4e-with-nullmailer-offlineimap-and-multiple-identities/][It keeps going]]
- [[https://ict4g.net/adolfo/notes/2014/12/27/emacs-imap.html][Using keychains]]
- [[https://www.djcbsoftware.nl/code/mu/cheatsheet.html][mu cheatsheet]]

* External setup
** 1. What to install
| =mu=                                                      | mail indexer and searcher                   |
| =offlineimap=                                             | for the email server                        |
| =w3m=                                                     | text based web browser to show HTML         |
| =openssl=                                                 | Encryption and certificates                 |
| =msmtp=                                                   | For sending mail                            |
| =pythonX -m pip install msal google google-auth-oauthlib= | For the pythonX version used by offlineimap |
|                                                           | Run =offlineimap= to get the info           |

Also add to path, to use this in shell mode

#+begin_src text
export PATH = $HOME/.doom.d/my-scripts/email"
#+end_src

** 2. Password authentication (virgin, yandex)
Install pass and attach it to your gpg key
#+begin_src shell
pass init $GPG_RECIPIENT
#+end_src

and add the passwords

#+begin_src shell
pass insert a@gmail.com
#+end_src

** 3. XOAUTH authentication (Google, Outlook)
:PROPERTIES:
:CUSTOM_ID: xoauth-setup
:END:

1. Go to [[file:my-scripts/email/read_password.py][this file]] and set =CREDENTIAL_FOLDER= (e.g. =/Users/CCCP/db_mail=) and the =GPG_RECIPIENT= (i.e. the key that will be used to encrypt the data)
2. Create following files in the =CREDENTIAL_FOLDER=
#+begin_src json
{
  "client_id": "08162f7c-0fd2-4200-a84a-f25a4db0b584",
  "client_secret": "TxRBilcHdC6WGBee]fs?QR:SJ8nI[g82"
}
#+end_src

and encrypt them e.g.

#+begin_src shell
gpg -e -r $GPG_RECIPIENT ilya.antonov@rhul.ac.uk
#+end_src

This will create =ilya.antonov@rhul.ac.uk.gpg= and likewise for other addresses. Remember to delete the original file!

See the sections below on how to find the =client_id= and =client_secret= for different apps

*** Gmail XOAUTH setup
1. Create an OAuth consent screen: https://console.cloud.google.com/apis/credentials/consent?project=sunny-idiom-256623
   - When doing so, add =https://mail.google.com/= to the scopes
2. Create the credentials [[https://console.cloud.google.com/apis/credentials?project=sunny-idiom-256623][here]] using *Create OAuth client ID* using *Desktop App*
3. You will be shown a =client_id=
4. And a =client_secret=

*** Outlook XOAUTH setup
Because my university does not allow one to setup an oauth app, we will spoof Thunderbird with
#+begin_quote
ClientId = "08162f7c-0fd2-4200-a84a-f25a4db0b584"
ClientSecret = "TxRBilcHdC6WGBee]fs?QR:SJ8nI[g82"
#+end_quote

** 4. Offlineimap (fetching mail)
*** a. Set the =~/.offlineimaprc=
- Example for 4 accounts
- See [[*Certificates][Certificates]] and [[*SSL certificate][SSL certificate]]
- See [[#xoauth-setup][XOAUTH setup]]

#+BEGIN_SRC text
#  ____  _____  _   _  _____  ____      _     _
# / ___|| ____|| \ | || ____||  _ \    / \   | |
#| |  _ |  _|  |  \| ||  _|  | |_) |  / _ \  | |
#| |_| || |___ | |\  || |___ |  _ <  / ___ \ | |___
# \____||_____||_| \_||_____||_| \_\/_/   \_\|_____|
#

[general]
accounts = ilya_OUTLOOK
# accounts = ilya_GMAIL, ilya_DREAMSAI, vgoptics, ilya_NTLWORLD, yandex

# user interface for terminal
ui = TTYUI

pythonfile = ~/.doom.d/my-scripts/email/read_password.py

# when to stop trying to establish a connection
socktimeout = 120

postsynchook = mu index --maildir ~/mail
autorefresh = 5
quick = 10

# ____   ____   _____     _     __  __  ____            _     ___
#|  _ \ |  _ \ | ____|   / \   |  \/  |/ ___|          / \   |_ _|
#| | | || |_) ||  _|    / _ \  | |\/| |\___ \  _____  / _ \   | |
#| |_| ||  _ < | |___  / ___ \ | |  | | ___) ||_____|/ ___ \  | |
#|____/ |_| \_\|_____|/_/   \_\|_|  |_||____/       /_/   \_\|___|
#
#

[Account ilya_DREAMSAI]
localrepository = ilya_DREAMSAI-local
remoterepository = ilya_DREAMSAI-remote
synclabels = yes
labelsheader = X-Keywords
maxconnections = 2

[Repository ilya_DREAMSAI-local]
type  = GmailMaildir
localfolders = ~/db_mail/ilya_DREAMSAI

[Repository ilya_DREAMSAI-remote]
type = Gmail
remotehost = imap.gmail.com
remoteuser=ilya.antonov@dreams-ai.com
realdelete = no

auth_mechanisms=XOAUTH2
oauth2_request_url=https://accounts.google.com/o/oauth2/token
oauth2_client_id_eval=get_credentials("ilya.antonov@dreams-ai.com")["client_id"]
oauth2_client_secret_eval=get_credentials("ilya.antonov@dreams-ai.com")["client_secret"]
oauth2_access_token_eval=get_token_gmail("ilya.antonov@dreams-ai.com")

ssl = yes
sslcacertfile=/usr/local/etc/ca-certificates/cert.pem

#  ____  __  __     _     ___  _
# / ___||  \/  |   / \   |_ _|| |
#| |  _ | |\/| |  / _ \   | | | |
#| |_| || |  | | / ___ \  | | | |___
# \____||_|  |_|/_/   \_\|___||_____|

[Account ilya_GMAIL]
localrepository = ilya_GMAIL-local
remoterepository = ilya_GMAIL-remote
synclabels = yes
labelsheader = X-Keywords
maxconnections = 2

[Repository ilya_GMAIL-local]
type  = GmailMaildir
localfolders = ~/db_mail/ilya_GMAIL

[Repository ilya_GMAIL-remote]
type = Gmail
remotehost = imap.gmail.com
remoteuser=antonov.ilya225@gmail.com
realdelete = no

auth_mechanisms=XOAUTH2
oauth2_request_url=https://accounts.google.com/o/oauth2/token
oauth2_client_id_eval=get_credentials("antonov.ilya225@gmail.com")["client_id"]
oauth2_client_secret_eval=get_credentials("antonov.ilya225@gmail.com")["client_secret"]
oauth2_access_token_eval=get_token_gmail("antonov.ilya225@gmail.com")

ssl = yes
sslcacertfile =/usr/local/etc/ca-certificates/cert.pem

# _   _  _____  _  __        __ ___   ____   _      ____
#| \ | ||_   _|| | \ \      / // _ \ |  _ \ | |    |  _ \
#|  \| |  | |  | |  \ \ /\ / /| | | || |_) || |    | | | |
#| |\  |  | |  | |___\ V  V / | |_| ||  _ < | |___ | |_| |
#|_| \_|  |_|  |_____|\_/\_/   \___/ |_| \_\|_____||____/

[Account ilya_NTLWORLD]
localrepository = ilya_NTLWORLD-local
remoterepository = ilya_NTLWORLD-remote

[Repository ilya_NTLWORLD-local]
type = Maildir
localfolders = ~/db_mail/ilya_NTLWORLD

[Repository ilya_NTLWORLD-remote]
type = IMAP
remoteport = 993
remotehost = imap.virginmedia.com
remoteuser = ilya.antonov24@ntlworld.com
remotepasseval = get_pass("ilya.antonov24@ntlworld.com")["password"]
realdelete = no

ssl = yes
sslcacertfile =/usr/local/etc/ca-certificates/cert.pem

folderfilter = lambda foldername: foldername  in ['INBOX', 'Drafts', 'Archive', 'Sent', 'Trash']

#__     __ ____   ___   ____  _____  ___  ____  ____
#\ \   / // ___| / _ \ |  _ \|_   _||_ _|/ ___|/ ___|
# \ \ / /| |  _ | | | || |_) | | |   | || |    \___ \
#  \ V / | |_| || |_| ||  __/  | |   | || |___  ___) |
#   \_/   \____| \___/ |_|     |_|  |___|\____||____/
#
#

[Account vgoptics]
localrepository = vgoptics-local
remoterepository = vgoptics-remote

[Repository vgoptics-local]
type = Maildir
localfolders = ~/db_mail/vgoptics

[Repository vgoptics-remote]
type = IMAP
remoteport = 993
remotehost = imap.virginmedia.com
remoteuser = vgoptics@virginmedia.com
remotepasseval = get_pass("vgoptics@virginmedia.com")["password"]
realdelete = no

ssl = yes
sslcacertfile =/usr/local/etc/ca-certificates/cert.pem

folderfilter = lambda foldername: foldername  in ['INBOX', 'Drafts', 'Archive', 'Sent', 'Trash']

#  ___   _   _  _____  _      ___    ___   _  __
# / _ \ | | | ||_   _|| |    / _ \  / _ \ | |/ /
#| | | || | | |  | |  | |   | | | || | | || ' /
#| |_| || |_| |  | |  | |___| |_| || |_| || . \
# \___/  \___/   |_|  |_____|\___/  \___/ |_|\_\

[Account ilya_OUTLOOK]
localrepository = ilya_OUTLOOK-local
remoterepository = ilya_OUTLOOK-remote

[Repository ilya_OUTLOOK-local]
type = Maildir
localfolders = ~/db_mail/ilya_OUTLOOK

[Repository ilya_OUTLOOK-remote]
type = IMAP
remotehost = outlook.office365.com
remoteuser = ilya.antonov@rhul.ac.uk

auth_mechanisms=XOAUTH2
oauth2_request_url=https://login.microsoftonline.com/common/oauth2/v2.0/token
oauth2_client_id_eval=get_credentials("ilya.antonov@rhul.ac.uk")["client_id"]
oauth2_client_secret_eval=get_credentials("ilya.antonov@rhul.ac.uk")["client_secret"]
oauth2_access_token_eval=get_token_outlook("ilya.antonov@rhul.ac.uk")

ssl = yes
sslcacertfile =/usr/local/etc/ca-certificates/cert.pem

folderfilter = lambda folder: folder in ['INBOX', 'Drafts', 'Archive', 'Sent Items', 'Deleted Items']

#__   __  _     _   _  ____   _____ __  __
#\ \ / / / \   | \ | ||  _ \ | ____|\ \/ /
# \ V / / _ \  |  \| || | | ||  _|   \  /
#  | | / ___ \ | |\  || |_| || |___  /  \
#  |_|/_/   \_\|_| \_||____/ |_____|/_/\_\

[Account yandex]
localrepository = yandex-local
remoterepository = yandex-remote

[Repository yandex-local]
type = Maildir
localfolders = ~/db_mail/yandex

[Repository yandex-remote]
type = IMAP
remoteport = 993
remotehost = imap.yandex.com
remoteuser = mail@ilya-antonov.ru
remotepasseval = get_pass("mail@ilya-antonov.ru")["password"]

ssl = yes
sslcacertfile =/usr/local/etc/ca-certificates/cert.pem
#+END_SRC

If offlineimap is giving an error, it is probably picking up python3.7. Delete all python3.7 email-related libraries:

1. Find the site libraries
#+BEGIN_SRC shell
  python3 -m site
#+END_SRC

2. [@2] Remove all =imap= packages
*** b. Certificates for IMAP server (fetching)
There is a certificate to verify connection to an IMAP server (to make sure you are syncing and giving away details to correct server):
[[https://www.offlineimap.org/doc/FAQ.html#how-do-i-generate-an-sslcacertfile-file]]
https://www.offlineimap.org/doc/FAQ.html#does-offlineimap-verify-ssl-certificates

- [2021-10-21 Thu] For some reason, I found that I should point to the root cert.pem that has the root certificates that most of the servers will be checked against. No need for the sslcertfile below

You can either:
**** Generate =sslcacertfile= (required for GMail)
#+BEGIN_SRC sh
openssl s_client -CApath /etc/ssl/certs -connect outlook.office365.com:imaps -showcerts | perl -ne 'print if /BEGIN/../END/'
#+END_SRC
- add =-showcerts= for full chain of certificates

- Copy it over the top certificate to the the chosen =sslcacertfile= which is set in =.offlineimaprc=
- Verify with
#+BEGIN_SRC sh
  SSL_CERT_DIR="" openssl s_client -CAfile /usr/local/etc/ca-certificates/offlineimap.pem  -connect imap.gmail.com:993 -partial_chain 2>&1 </dev/null
#+END_SRC

It should return a done, code0
**** Generate a constant =cert_fingerprint= (required for example for ntlworld) and add it manually to the config file
#+BEGIN_SRC sh
SSL_CERT_DIR="" openssl s_client -connect imap.SERVERTHATYOUCHOOSE.com:993 < /dev/null 2>/dev/null | openssl x509 -fingerprint -noout -text -in /dev/stdin
#+END_SRC
- Copy over the =SHA1 Fingerprint= to =cert_fingerprint= in =.offlineimaprc=

*** c. Run sync
#+begin_src shell
offlineimap
#+end_src
** 5. Setup mu4e
1. Remember to run the setup in [[https://www.djcbsoftware.nl/code/mu/mu4e/Getting-started.html#Getting-started][this tutorial]] for doing external setup
2. https://etienne.depar.is/emacs.d/mu4e.html
3. http://kitchingroup.cheme.cmu.edu/blog/2016/10/29/Sending-html-emails-from-org-mode-with-org-mime/

mu4e works tightly with mu. As a result, part of the configuration is set in mu.
In order to setup the mail database, you need to run the following

#+BEGIN_SRC shell
mu init --maildir="~/db_mail" --my-address="ilya.antonov@dreams-ai.com" --my-address="ilya.antonov24@ntlworld.com" --my-address="antonov.ilya225@gmail.com" --my-address="ilya.antonov@rhul.ac.uk" --my-address="vgoptics@virginmedia.com" --my-address="mail@ilya-antonov.ru"
#+END_SRC

Then index the messages with:
#+BEGIN_SRC shell
mu index
#+END_SRC

You can then run
#+BEGIN_SRC shell
mu info
#+END_SRC

to get information on the install

** 6. Sending mail =mstmp=
*** a. Create =~/.config/msmtp/config=

Make sure that the passwords are available in =pass=

#+BEGIN_SRC text
defaults
logfile ~/.msmtp.log
protocol smtp
auth on
tls on
tls_trust_file /usr/local/etc/ca-certificates/cert.pem

#  ___   _   _  _____  _      ___    ___   _  __
# / _ \ | | | ||_   _|| |    / _ \  / _ \ | |/ /
#| | | || | | |  | |  | |   | | | || | | || ' /
#| |_| || |_| |  | |  | |___| |_| || |_| || . \
# \___/  \___/   |_|  |_____|\___/  \___/ |_|\_\
#

account OUTLOOK
host smtp.office365.com
port 587

from ilya.antonov@rhul.ac.uk
user ilya.antonov@rhul.ac.uk

auth xoauth2
passwordeval read_password.py OUTLOOK ilya.antonov@rhul.ac.uk

#  ____  __  __     _     ___  _
# / ___||  \/  |   / \   |_ _|| |
#| |  _ | |\/| |  / _ \   | | | |
#| |_| || |  | | / ___ \  | | | |___
# \____||_|  |_|/_/   \_\|___||_____|
#

account ilya_GMAIL
host smtp.gmail.com
port 587

from antonov.ilya225@gmail.com
user antonov.ilya225@gmail.com

auth oauthbearer
passwordeval read_password.py GMAIL antonov.ilya225@gmail.com

# ____   ____   _____     _     __  __  ____            _     ___
#|  _ \ |  _ \ | ____|   / \   |  \/  |/ ___|          / \   |_ _|
#| | | || |_) ||  _|    / _ \  | |\/| |\___ \  _____  / _ \   | |
#| |_| ||  _ < | |___  / ___ \ | |  | | ___) ||_____|/ ___ \  | |
#|____/ |_| \_\|_____|/_/   \_\|_|  |_||____/       /_/   \_\|___|
#
#

account ilya_DREAMSAI
host smtp.gmail.com
port 587

from ilya.antonov@dreams-ai.com
user ilya.antonov@dreams-ai.com

auth oauthbearer
passwordeval read_password.py GMAIL ilya.antonov@dreams-ai.com

# _   _  _____  _  __        __ ___   ____   _      ____
#| \ | ||_   _|| | \ \      / // _ \ |  _ \ | |    |  _ \
#|  \| |  | |  | |  \ \ /\ / /| | | || |_) || |    | | | |
#| |\  |  | |  | |___\ V  V / | |_| ||  _ < | |___ | |_| |
#|_| \_|  |_|  |_____|\_/\_/   \___/ |_| \_\|_____||____/
#

account ilya_NTLWORLD
host smtp.ntlworld.com
port 587

from ilya.antonov24@ntlworld.com
user ilya.antonov24@ntlworld.com
eval echo password $(pass ilya.antonov24@ntlworld.com)

#__   __  _     _   _  ____   _____ __  __
#\ \ / / / \   | \ | ||  _ \ | ____|\ \/ /
# \ V / / _ \  |  \| || | | ||  _|   \  /
#  | | / ___ \ | |\  || |_| || |___  /  \
#  |_|/_/   \_\|_| \_||____/ |_____|/_/\_\
#

account yandex
host smtp.yandex.com
port 587

from mail@ilya-antonov.ru
user mail@ilya-antonov.ru
eval echo password $(pass mail@ilya-antonov.ru)

#__   __  _     _   _  ____   _____ __  __
#\ \ / / / \   | \ | ||  _ \ | ____|\ \/ /
# \ V / / _ \  |  \| || | | ||  _|   \  /
#  | | / ___ \ | |\  || |_| || |___  /  \
#  |_|/_/   \_\|_| \_||____/ |_____|/_/\_\
#

account vgoptics
host smtp.ntlworld.com
port 587

from vgoptics@virginmedia.com
user vgoptics@virginmedia.com
eval echo password $(pass vgoptics@virginmedia.com)
#+END_SRC
*** b. Certificates for SMTP server (Sending)
For [[*Sending mail][Sending mail]] you may need to get certificates and update them in =.msmtprc=

You can either:
1. Set =tls_trust_file= as before for =sslcacertfile=
2. Generate constant fingerprint

#+BEGIN_SRC shell
  msmtp --port=587 --serverinfo --tls --tls-certcheck=off --host=smtp.office365.com
 #+END_SRC
or

#+BEGIN_SRC shell
  msmtp --port=587 --serverinfo --tls --tls-certcheck=off -a ACCOUNT_NAME_FROM_MSTPRC
 #+END_SRC

- Copy the SHA256 into tls_fingerprint of the =.msmtprc= file

** Google
Create a new label in Google Mail. Next time it will sync to computer
** Virgin
| *Outgoing Mail Server* |                                     |
| Account Type           | SMTP                                |
| Username               | Your email address is your username |
| Server hostname        | smtp.virginmedia.com                |
| Server port            | 465                                 |
| Authentication         | Password                            |
| SSL/TLS                | Yes                                 |
|------------------------+-------------------------------------|
| *Incoming Mail Server* |                                     |
| Account Type           | IMAP                                |
| Username               | Your email address is your username |
| Server hostname        | imap.virginmedia.com                |
| Server port            | 993                                 |
| Authentication         | Password                            |
| SSL/TLS                | Yes                                 |

* Syncing mail with =offlineimap=
** Generic settings

#+begin_src emacs-lisp
(setq +mu4e-backend 'offlineimap)

(after! mu4e
  (setq mu4e-attachment-dir (expand-file-name "~/Downloads/mail")
        mu4e-update-interval nil
        mu4e-context-policy 'pick-first
        mu4e-compose-context-policy 'always-ask
        mu4e-headers-buffer-name "*mu4e-headers*"))
#+end_src

** Account setup
*** =ilya.antonov24@ntlworld=
#+BEGIN_SRC emacs-lisp
(after! mu4e
  (defvar my/mu4e/context-ntlworld
    (make-mu4e-context
     :name "ntlworld"
     :enter-func (lambda () (mu4e-message "Entering NTLWORLD"))
     :leave-func (lambda () (mu4e-message "Leaving NTLWORLD"))
     :match-func (lambda (msg)
                   (when msg
                     (mu4e-message-contact-field-matches
                      msg (list :to :from :cc) "ilya.antonov24@ntlworld.com")))
     :vars '((user-mail-address           . "ilya.antonov24@ntlworld.com")
             (user-full-name              . "Ilya Antonov (NTLWORLD)")
             (mu4e-sent-messages-behavior . sent)
             (mu4e-sent-folder            . "/ilya_NTLWORLD/Sent")
             (mu4e-drafts-folder          . "/ilya_NTLWORLD/Drafts")
             (mu4e-trash-folder           . "/ilya_NTLWORLD/Trash")
             (mu4e-refile-folder          . "/ilya_NTLWORLD/Archive")
             (mu4e-compose-signature      . "Ilya Antonov,\n⦿ NTLWORLD")
             (mu4e-compose-format-flowed . nil)))))
 #+END_SRC
*** =ilya.antonov@rhul.ac.uk=
#+BEGIN_SRC emacs-lisp
(after! mu4e
  (defvar my/mu4e/context-outlook
    (make-mu4e-context
     :name "outlook"
     :enter-func (lambda () (mu4e-message "Entering OUTLOOK"))
     :leave-func (lambda () (mu4e-message "Leaving OUTLOOK"))
     :match-func (lambda (msg)
                   (when msg
                     (mu4e-message-contact-field-matches
                      msg '(list :from :to :cc :bcc) "ilya.antonov@rhul.ac.uk")))
     :vars '((user-mail-address . "ilya.antonov@rhul.ac.uk")
             (mu4e-sent-folder            . "/ilya_OUTLOOK/Sent Items")
             (mu4e-drafts-folder          . "/ilya_OUTLOOK/Drafts")
             (mu4e-trash-folder           . "/ilya_OUTLOOK/Deleted Items")
             (mu4e-refile-folder          . "/ilya_OUTLOOK/Archive")
             (mu4e-sent-messages-behavior . delete)
             (mu4e-compose-signature      . "---\nResearcher\n*Royal Holloway University of London*")
             (mu4e-compose-format-flowed  . nil)))))
#+END_SRC
*** =ilya.antonov@dreams-ai.com=
#+BEGIN_SRC emacs-lisp
(after! mu4e
  (defvar my/mu4e/context-dreamsai
    (make-mu4e-context
     :name "dreams-ai"
     :enter-func (lambda () (message "Entering Dreams ☁"))
     :leave-func (lambda () (message "🦑 Plummeting out"))
     :match-func (lambda (msg)
                   (when msg
                     (mu4e-message-contact-field-matches
                      msg (list :to :from :cc) "ilya.antonov@dreams-ai.com")))
     :vars '((user-mail-address . "ilya.antonov@dreams-ai.com")
             (user-full-name              . "Ilya Antonov (Dreams-AI)")
             (mu4e-sent-folder            . "/ilya_DREAMSAI/[Gmail].Sent Mail")
             (mu4e-drafts-folder          . "/ilya_DREAMSAI/[Gmail].Drafts")
             (mu4e-trash-folder           . "/ilya_DREAMSAI/[Gmail].Bin")
             (mu4e-refile-folder          . "/ilya_DREAMSAI/[Gmail].Starred")
             (mu4e-sent-messages-behavior . delete) ; Gmail takes care of this
             (mu4e-compose-signature      . "\n\nPhysics Handyman\n\n☁ DREAMSAI")
             (mu4e-compose-format-flowed  . t)))))
 #+END_SRC
***  =antonov.ilya225@gmail.com=
#+BEGIN_SRC emacs-lisp
(after! mu4e
  (defvar my/mu4e/context-gmail
    (make-mu4e-context
     :name "gmail"
     :enter-func (lambda () (mu4e-message "Entering GMAIL"))
     :leave-func (lambda () (mu4e-message "Leaving GMAIL"))
     :match-func (lambda (msg)
                   (when msg
                     (mu4e-message-contact-field-matches
                      msg (list :to :from :cc) "antonov.ilya225@gmail.com")))
     :vars '((user-mail-address . "antonov.ilya225@gmail.com")
             (user-full-name              . "Ilya Antonov (GMAIL)")
             (mu4e-sent-folder            . "/ilya_GMAIL/[Gmail].Sent Mail")
             (mu4e-drafts-folder          . "/ilya_GMAIL/[Gmail].Drafts")
             (mu4e-trash-folder           . "/ilya_GMAIL/[Gmail].Bin")
             (mu4e-refile-folder          . "/ilya_GMAIL/[Gmail].Starred")
             (mu4e-sent-messages-behavior . delete) ; Gmail takes care of this
             (mu4e-compose-signature      . "Ilya Antonov,\n⦿ GMAIL")
             (mu4e-compose-format-flowed . nil)))))
#+END_SRC
*** =vgoptics@virginmedia.com=
#+BEGIN_SRC emacs-lisp
(after! mu4e
  (defvar my/mu4e/context-vgoptics
    (make-mu4e-context
     :name "vgoptics"
     :enter-func (lambda () (mu4e-message "Entering VGOptics"))
     :leave-func (lambda () (mu4e-message "Leaving VGOptics"))
     :match-func (lambda (msg)
                   (when msg
                     (mu4e-message-contact-field-matches
                      msg (list :to :from :cc) "vgoptics@virginmedia.com")))
     :vars '((user-mail-address . "vgoptics@virginmedia.com")
             (user-full-name              . "VGOptics")
             (mu4e-sent-folder       . "/vgoptics/Sent")
             (mu4e-drafts-folder     . "/vgoptics/Drafts")
             (mu4e-trash-folder      . "/vgoptics/Trash")
             (mu4e-refile-folder     . "/vgoptics/Archive")
             (mu4e-sent-messages-behavior . sent)
             (mu4e-compose-signature      . "VGOptics Limited")
             (mu4e-compose-format-flowed . nil)))))
#+END_SRC
*** =mail@ilya-antonov.ru=
#+BEGIN_SRC emacs-lisp
(after! mu4e
  (defvar my/mu4e/context-yandex
    (make-mu4e-context
     :name "yandex"
     :enter-func (lambda () (mu4e-message "Entering Yandex"))
     :leave-func (lambda () (mu4e-message "Leaving Yandex"))
     :match-func (lambda (msg)
                   (when msg
                     (mu4e-message-contact-field-matches
                      msg (list :to :from :cc) "mail@ilya-antonov.ru")))
     :vars '((user-mail-address . "mail@ilya-antonov.ru")
             (user-full-name              . "Yandex")
             (mu4e-sent-folder       . "/yandex/Sent")
             (mu4e-drafts-folder     . "/yandex/Drafts")
             (mu4e-trash-folder      . "/yandex/Trash")
             (mu4e-refile-folder     . "/yandex/Archive")
             (mu4e-sent-messages-behavior . sent)
             (mu4e-compose-signature      . "---\nYandex🦑")
             (mu4e-compose-format-flowed . nil)))))
#+END_SRC
*** GMAIL =ilya.antonov@dreams-ai.com= and =antonov.ilya225@gmail.com=
#+BEGIN_SRC emacs-lisp
(setq +mu4e-gmail-accounts '(("ilya.antonov@dreams-ai.com" . "/ilya_DREAMSAI")
                             ("antonov.ilya225@gmail.com" . "/ilya_GMAIL")))
#+END_SRC
*** Load the accounts
#+begin_src emacs-lisp
(after! mu4e
  (setq mu4e-contexts
        (list my/mu4e/context-outlook
              my/mu4e/context-dreamsai
              my/mu4e/context-ntlworld
              my/mu4e/context-gmail
              my/mu4e/context-yandex
              my/mu4e/context-vgoptics
              )))
#+end_src
** Custom actions
*** Read and delete
#+BEGIN_SRC emacs-lisp
;; (after! mu4e
;;   (add-to-list 'mu4e-marks
;;                '(read-and-trash
;;                  :char       "X . ☠"
;;                  :prompt     "dBloat"
;;                  :show-target (lambda (target) "Bloat")
;;                  :action      (lambda (docid msg target)
;;                                         ;remove [u]nread and [N]ew → Mark as [S]een and [T]rash
;;                                 (mu4e--server-move docid nil "+S-u-N"))))

;;   (mu4e~headers-defun-mark-for read-and-trash)
;;   (define-key mu4e-headers-mode-map (kbd "d") 'mu4e-headers-mark-for-read-and-trash)
;;   )
 #+END_SRC
*** Dump order
#+BEGIN_SRC emacs-lisp
(after! mu4e
  (add-to-list 'mu4e-marks
               '(dump-order
                 :char       ("o" . "📮")
                 :prompt     "wPlace into order?"
                 :show-target (lambda (target) "Order")
                 :action      (lambda (docid msg target)
                                          ;remove [u]nread and [N]ew → Mark as [S]een. move to the orders directory
                                (mu4e--server-move docid "/ilya_GMAIL/Orders" "+S-u-N"))))

  (mu4e~headers-defun-mark-for dump-order)
  (define-key mu4e-headers-mode-map (kbd "o") 'mu4e-headers-mark-for-dump-order))
 #+END_SRC
*** Expenses
#+BEGIN_SRC emacs-lisp
(after! mu4e
  (add-to-list 'mu4e-marks
               '(expenses-dreamsai
                 :char       ("e" . "💰")
                 :prompt     "wMark as expense"
                 :show-target (lambda (target) "Expenses ☁")
                 :action      (lambda (docid msg target)
                                        ;remove [u]nread and [N]ew → Mark as [S]een. move to the orders directory
                                (mu4e--server-move docid "/ilya_DREAMSAI/Expenses" "+S-u-N"))))

  (mu4e~headers-defun-mark-for expenses-dreamsai)
  (define-key mu4e-headers-mode-map (kbd "e") 'mu4e-headers-mark-for-expenses-dreamsai))
 #+END_SRC

** View: Main
*** Jump to inboxes
#+BEGIN_SRC emacs-lisp
(setq mu4e-maildir-shortcuts
      '(("/ilya_DREAMSAI/INBOX" . ?d)
        ("/ilya_GMAIL/INBOX" . ?g)
        ("/ilya_NTLWORLD/INBOX" . ?n)
        ("/ilya_OUTLOOK/INBOX" . ?u)
        ("/vgoptics/INBOX" . ?v)
        ("/yandex/INBOX" . ?y)))
 #+END_SRC
*** Bookmarks
Define queries that will be sent to =mu find= command. To see the possible queries run
#+BEGIN_SRC shell
man mu-find
man mu-query
#+END_SRC

#+begin_src emacs-lisp
(after! mu4e
  (add-to-list 'mu4e-bookmarks
               ;; add bookmark for recent messages on the Mu mailing list.
               '( :name "Paypal example"
                  :key  ?p
                  :query "subject:/Paypal/ AND date:20d..now"))
  (add-to-list 'mu4e-bookmarks
               '(:name "All Inboxes"
                 :key ?i
                 :query "maildir:/ilya_GMAIL/INBOX OR maildir:/ilya_NTLWORLD/INBOX OR maildir:/ilya_OUTLOOK/INBOX OR maildir:/ilya_DREAMSAI/INBOX OR maildir:/vgoptics OR maildir:/yandex"
                 ))
  (add-to-list 'mu4e-bookmarks
               '(:name "All Archives"
                 :query "maildir:/ilya_GMAIL/[Gmail].Starred OR maildir:/ilya_NTLWORLD/Archive OR maildir:/ilya_OUTLOOK/Archive OR maildir:/ilya_DREAMSAI/[Gmail].Starred"
                 :key ?a)))
#+end_src
** View: Messages
#+BEGIN_SRC emacs-lisp
(after! mu4e
; Hook imagemagick if it was installed with emacs
(when (fboundp 'imagemagick-register-types)
  (imagemagick-register-types)))
 #+END_SRC
** View: Header
#+begin_src emacs-lisp
(after! mu4e
  (setq mu4e-headers-fields
      '((:account-stripe . 1)
        (:human-date . 12)
        (:flags . 10)
        ;;(:mailing-list . 10)
        (:from-or-to . 25)
        ;;(:size . 8)
        (:subject)))
  (setq mu4e-use-fancy-chars nil))
#+end_src

*** Icons
#+begin_src emacs-lisp :tangle no
(setq mu4e-headers-unread-mark    '("u" . "📩 ")
      mu4e-headers-draft-mark     '("D" . "🚧 ")
      mu4e-headers-flagged-mark   '("F" . "🚩 ")
      mu4e-headers-new-mark       '("N" . "✨ ")
      mu4e-headers-passed-mark    '("P" . "↪ ")
      mu4e-headers-replied-mark   '("R" . "↩ ")
      mu4e-headers-seen-mark      '("S" . " ")
      mu4e-headers-trashed-mark   '("T" . "🗑️")
      mu4e-headers-attach-mark    '("a" . "📎 ")
      mu4e-headers-encrypted-mark '("x" . "🔑 ")
      mu4e-headers-signed-mark    '("s" . "🖊 "))
#+end_src

** Syncing mail =my/update-mu4e=
 #+BEGIN_SRC emacs-lisp
(setq mu4e-update-pre-hook 'my/gpg-load)

(defun my/mu4e/update ()
  (interactive)
  (let (
        ;; (last-venv pyvenv-virtual-env-name)
        )
    ;; (message (concat ">>>> Set my/python/last-venv to " last-venv))
    ;; (pyvenv-workon "imap")
    ;; (pyvenv-deactivate)
    ;; (message ">>>> deactivated")
    ;;(exec-path-from-shell-initialize)

    (message ">>>> decrypting dummy file")
    (epa-decrypt-file
     (concat doom-user-dir "my-files/gpg/load_password_dummy_file.gpg") "/dev/null")
    ;; (message ">>>> updating")
    (mu4e-update-mail-and-index t)
    ;; (message (concat " (((cringe incoming))) " last-venv))
    ;; (pyvenv-workon last-venv)
    ))
(global-set-key (kbd "C-C M U") 'my/mu4e/update)
(define-key my/keymap (kbd "u") 'my/mu4e/update)
(define-key my/keymap (kbd "m") 'mu4e)
 #+END_SRC
* Sending mail with =msmtp=
#+BEGIN_SRC emacs-lisp
(after! mu4e
  (setq sendmail-program (executable-find "msmtp")
        message-send-mail-function (function smtpmail-send-it)
        message-sendmail-f-is-evil t
                                        ; Use the correct account context when sending mail based on the from header.
                                        ; message-sendmail-envelope-from 'header
        message-sendmail-extra-arguments '("--read-envelope-from")
        message-send-mail-function (function message-send-mail-with-sendmail))
  (add-hook 'mu4e-compose-pre-hook 'my/gpg-load))

(define-key my/keymap (kbd "C") 'mu4e-compose-new)

;; Path for the bash scripts
(setenv "PATH" (concat (getenv "PATH") ":" doom-user-dir "my-scripts/email"))

;; Attaching with dired with C-c RET C-a
(add-hook 'dired-mode-hook 'turn-on-gnus-dired-mode)
 #+END_SRC

** Overriding defaults
#+BEGIN_SRC emacs-lisp :tangle no
(after! mu4e
  (setq message-citation-line-function 'message-insert-formatted-citation-line
                                        ; Use the correct account context when sending mail based on the from header.
        message-sendmail-envelope-from 'header
        ;;message-citation-line-format "%N @ %Y-%m-%d %H:%M %Z:\n"
        ))
 #+END_SRC
* TODO Capturing messages
#+BEGIN_SRC emacs-lisp :tangle no
(after! mu4e
  (define-key mu4e-headers-mode-map (kbd "C-c c") 'mu4e-org-store-and-capture)
  (define-key mu4e-view-mode-map    (kbd "C-c c") 'mu4e-org-store-and-capture))
 #+END_SRC
* TODO Attach with dired =C-c RET C-a=

Make the =gnus-dired-mail-buffers= function also work on message-mode derived modes, such as mu4e-compose-mode

#+BEGIN_SRC emacs-lisp :tangle no
  (require 'gnus-dired)
  (defun gnus-dired-mail-buffers ()
    "Return a list of active message buffers."
    (let (buffers)
      (save-current-buffer
        (dolist (buffer (buffer-list t))
          (set-buffer buffer)
          (when (and (derived-mode-p 'message-mode)
                     (null message-sent-message-via))
            (push (buffer-name buffer) buffers))))
      (nreverse buffers)))

  (setq gnus-dired-mail-mode 'mu4e-user-agent)
  (add-hook 'dired-mode-hook 'turn-on-gnus-dired-mode)
 #+END_SRC
* TODO New mail alert

#+begin_src emacs-lisp :tangle no
(after! mu4e-alert
  (setq mu4e-alert-interesting-mail-query
        (concat
         "flag:unread maildir:/ilya_NTLWORLD/INBOX "
         "OR "
         "flag:unread maildir:/ilya_GMAIL/INBOX "
         "OR "
         "flag:unread maildir:/ilya_DREAMSAI/INBOX "
         " OR "
         "flag:unread maildir:/ilya_OUTLOOK/INBOX"
         ))
  (mu4e-alert-enable-mode-line-display))
#+end_src

** Refresh every 60seconds
#+begin_src emacs-lisp :tangle no
(defun my/mu4e-alert-mode-line ()
  (interactive)
  (mu4e~proc-kill)
  (mu4e-alert-enable-mode-line-display))
(run-with-timer 0 60 'my/mu4e-alert-mode-line)
#+end_src
