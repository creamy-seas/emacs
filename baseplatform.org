#+TITLE: First file to load - has almost no dependencies
#+STARTUP: overview
#+PROPERTY: header-args :tangle yes

* 1 - Local variables
Previously I had the config folder in a separate directory, so had to specify the config-folder-location
TODO: Remove this in the future

#+BEGIN_SRC emacs-lisp
  (setq my/config-folder-location user-emacs-directory)
  (setq user-full-name "Ilya Antonov")
  (setq user-mail-address "ilya.antonov@dreams-ai.com")
 #+END_SRC
* 2 - Manual loading of =el= files
Some .el files are downloaded directly and kept in the config folder
#+BEGIN_SRC emacs-lisp
  (add-to-list 'load-path (concat my/config-folder-location "manual_el"))
#+END_SRC
* 3 - Repositories
** List repositories we want to install from
#+BEGIN_SRC emacs-lisp
  (setq package-archives '(("org"       . "https://orgmode.org/elpa/")
                           ("gnu"       . "https://elpa.gnu.org/packages/")
                           ("melpa"     . "https://melpa.org/packages/")
                           ("melpa-stable" . "https://stable.melpa.org/packages/")))
 #+END_SRC
** Initialize the packages manually instead of running after the init file is loaded
#+BEGIN_SRC emacs-lisp
  (setq package-enable-at-startup nil)
  (package-initialize)
  (unless package-archive-contents
    (package-refresh-contents))
 #+END_SRC
* 4 - =Use-package=
- =:init= is executed before the package is loaded
- =:config= is executed afte the package is loaded
#+BEGIN_SRC emacs-lisp
  (unless (package-installed-p 'use-package)
    (package-refresh-contents)
    (package-install 'use-package))
  (require 'use-package)
#+END_SRC
* 5 - =my/add-package-to-list=
#+BEGIN_SRC emacs-lisp
  (eval-when-compile (setq my/package-list '()))

  (defun my/add-to-package-list (package-with-apostrophe)
    "Adds the package to my/package-list.
  Ensure that it is escaped with apostrophe to avoid evaluation"
    (setq my/package-list (add-to-list 'my/package-list package-with-apostrophe)))
 #+END_SRC
* 6 - Getting the system path
#+BEGIN_SRC emacs-lisp
  (use-package exec-path-from-shell
    :ensure t
    :config (my/add-to-package-list 'exec-path-from-shell))

  (if (string-equal system-type "darwin")
      (progn
                                          ; Specify what env variables to load into emacs
        (exec-path-from-shell-copy-env "PYTHONPATH")
        (exec-path-from-shell-copy-env "WORKON_HOME")
        ))

  (exec-path-from-shell-initialize)
 #+END_SRC
* 7 - Emacs server
#+BEGIN_SRC emacs-lisp
  (server-start)
 #+END_SRC
