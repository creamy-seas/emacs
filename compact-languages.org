#+TITLE: Languages config not large enough for a separate org file
#+STARTUP: overview
#+PROPERTY: header-args :tangle yes

If there is a parsing error
#+BEGIN_SRC shell :tangle no
rm -rf .cache/semanticdb
#+END_SRC
* PACKAGE CSV
#+BEGIN_SRC emacs-lisp
  (use-package csv-mode
    :ensure t
    :init (my/add-to-package-list 'csv-mode))
 #+END_SRC

* PACKAGE JS/TS
#+BEGIN_SRC emacs-lisp
  (setq js-indent-level 2)
  (use-package tide
    :ensure t
    :init (my/add-to-package-list 'tide))
  (use-package typescript-mode
    :ensure t
    :init (my/add-to-package-list 'typescript-mode))

  (add-hook 'js-mode-hook (lambda ()
                            (setq indent-tabs-mode nil
                                  js-indent-level 2
                                  tab-width 2)))

  (defun setup-tide-mode ()
    (interactive)
    (tide-setup)
    (flycheck-mode +1)
    (setq flycheck-check-syntax-automatically '(save mode-enabled))
    (eldoc-mode +1)
    (tide-hl-identifier-mode +1)
    ;; company is an optional dependency. You have to
    ;; install it separately via package-install
    ;; `M-x package-install [ret] company`
    (company-mode +1))

  (add-hook 'typescript-mode-hook (lambda ()
                                    (aggressive-indent-mode 0)
                                    (setq tab-width 2
                                          typescript-indent-level 2
                                          )
                                    (setup-tide-mode)
                                    ))
  (add-to-list 'auto-mode-alist '("\\.tsx\\'" . typescript-mode))




  ;; formats the buffer before saving
  ;; (add-hook 'before-save-hook 'tide-format-before-save)

  ;; (add-hook 'typescript-mode-hook #'setup-tide-mode)
 #+END_SRC
* PACKAGE Vue
#+BEGIN_SRC emacs-lisp
 (add-hook 'html-mode-hook
          (lambda()
          (setq sgml-basic-offset 2)
          (setq indent-tabs-mode nil)))
 #+END_SRC
