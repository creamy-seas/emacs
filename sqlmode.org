#+TITLE: SQLmode
#+STARTUP: overview
#+PROPERTY: header-args :tangle yes

|--------------------+--------------------------------------------------------------------------------------------------------------------------------|
| Emacs setup manual | https://truongtx.me/2014/08/23/setup-emacs-as-an-sql-database-client                                                           |
| Read from file     | https://stackoverflow.com/questions/5734965/how-can-i-get-emacs-sql-mode-to-use-the-mysql-config-file-my-cnf/46114944#46114944 |
| Main manual        | https://www.emacswiki.org/emacs/SqlMode                                                                                        |
| Remote connection  | https://stackoverflow.com/questions/17246119/emacs-how-to-use-ssh-tunnel-to-connect-to-remote-mysql                            |
| LSP SQLmode        | https://github.com/emacs-lsp/lsp-mssql                                                                                         |
| LSP Treemacs       | https://github.com/emacs-lsp/lsp-treemacs                                                                                      |
|--------------------+--------------------------------------------------------------------------------------------------------------------------------|

* DOWN LSP
#+BEGIN_SRC emacs-lisp
  ;; (require 'lsp-mssql)

  ;; (add-hook 'sql-mode-hook 'lsp)

  ;; (setq lsp-a
  ;;       lsp-mssql-connections
  ;;       [(:server "localhost"
  ;;            :database ""
  ;;            :user "sa"
  ;;            :password "Dreams2020")])
 #+END_SRC
* Init
#+BEGIN_SRC emacs-lisp
  (require 'sql)
  (add-hook 'sql-interactive-mode-hook
            (lambda ()
              (toggle-truncate-lines t)))
 #+END_SRC
* =my/sql/connect=
#+BEGIN_SRC emacs-lisp
  (defun my/sql/connect (ssh-connection-directory sql-product sql-connection-name)
    "Connect to the chosen database using the ssh string to login to server first"
    (let ((default-directory ssh-connection-directory))
      (setq sql-product sql-product)
      (sql-connect sql-connection-name)))
 #+END_SRC
* Postgres
#+BEGIN_SRC emacs-lisp
  (my/add-dependency "psql")

  (add-to-list 'sql-connection-alist
               '(pg-horserace
                 (sql-product 'postgres)
                 (sql-port 5433)
                 (sql-server "localhost")
                 (sql-user "postgres")
                 (sql-password "dreamsai")
                 (sql-database "horse_racing")))

  (add-to-list 'sql-connection-alist
               '(pg-betting-platform
                 (sql-product 'postgres)
                 (sql-port 5432)
                 (sql-server "localhost")
                 (sql-user "postgres")
                 (sql-password "admin")
                 (sql-database "sa_bettingplatform")))

  (defun my/sql/postgres-dreamsai ()
    (interactive)
    (my/sql/connect "/ssh:ilya@dreams-ai.com" 'postgres 'pg-horserace))
 #+END_SRC
* DOWN SQL Server (MSSQL)
#+BEGIN_SRC emacs-lisp
  ;; (my/add-dependency "osql")

  ;; (add-to-list 'sql-connection-alist
  ;;              '(ms-project021
  ;;                (sql-product 'ms)
  ;;                (sql-port 1433)
  ;;                (sql-server "localhost")
  ;;                (sql-user "sa")
  ;;                (sql-password "Dreams2020")
  ;;                (sql-database "NXE")))

  ;; (defun my/sql/ms-project02 ()
  ;;   (interactive)
  ;;   (my/sql/connect "/ssh:ilya@project021.sinobestech.com.hk" 'ms 'ms-project021))
 #+END_SRC
